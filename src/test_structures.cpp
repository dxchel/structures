#include "headers/test_structures.hpp"
#include "headers/structures_examples.hpp"

int test_LinkedList(){
    printf("Creating list with 1 ");
    LinkedList<int> *list = new LinkedList<int>((int*)1);
    list->print();
    printf("Adding 2 ");
    list->insert((int*)2);
    list->print();
    printf("Adding 3 ");
    list->insert((int*)3);
    list->print();
    printf("Adding 4 ");
    list->insert((int*)4);
    list->print();
    printf("Adding 5 into 2 ");
    list->insert((int*)5, 2);
    list->print();
    printf("Adding 0 into 0 ");
    list->insert((int*)0, 0);
    list->print();
    printf("Adding 6 into 2 ");
    list->insert((int*)6, 2);
    list->print();
    printf("Adding -1 into -1 ");
    list->insert((int*)-1, -1);
    list->print();
    printf("Adding 100 into 100 ");
    list->insert((int*)100, 100);
    list->print();
    std::cout << "Here's index 4! " << list->index(4) << std::endl;
    list->reverse();
    printf("And now reversed! ");
    list->print();
    std::cout << "Removing index 3: " << list->remove(3) << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing index 20: " << list->remove(20) << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    std::cout << "Removing last index: " << list->remove() << std::endl;
    list->print();
    delete list;
    return 0;
};
